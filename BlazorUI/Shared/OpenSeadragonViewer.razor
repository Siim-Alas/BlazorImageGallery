
@using BlazorUI.Services
@using BlazorUI.Services.JSInteropHelpers
@using HttpRequestModelsClassLibrary

@inject IJSRuntime JSRuntime
@inject OpenSeadragonClient OSDClient
@inject AuthenticationStateProvider AuthStateProvider

<div @attributes="UnmatchedParameters">
    <div @ref="ViewerReference" class="covers-entire-parent"></div>
    <div id="osdToolbarDiv" class="bg-transparent m-0" style="position:absolute;left:0;top:0;">
        <div id="zoomin" title="Zoom in" class="dropbtn p-1 text-white pointer-cursor">
            <span class="oi oi-zoom-in"></span>
        </div>
        <div id="zoomout" title="Zoom out" class="dropbtn p-1 text-white pointer-cursor">
            <span class="oi oi-zoom-out"></span>
        </div>
        <div id="gohome" title="Go home" class="dropbtn p-1 text-white pointer-cursor">
            <span class="oi oi-home"></span>
        </div>
        <div id="togglefullpage" title="Toggle full page" class="dropbtn p-1 text-white pointer-cursor">
            <span class="oi oi-fullscreen-enter"></span>
        </div>
        <div id="rotateleft" title="Rotate left" class="dropbtn p-1 text-white pointer-cursor">
            <span class="oi oi-action-undo"></span>
        </div>
        <div id="rotateright" title="Rotate right" class="dropbtn p-1 text-white pointer-cursor">
            <span class="oi oi-action-redo"></span>
        </div>
        <div id="previous" title="Previous page" class="dropbtn p-1 text-white pointer-cursor">
            <span class="oi oi-arrow-left"></span>
        </div>
        <div id="next" title="Next page" class="dropbtn p-1 text-white pointer-cursor">
            <span class="oi oi-arrow-right"></span>
        </div>
        <div title="Take a screenshot" class="dropbtn p-1 text-white pointer-cursor"
                style="display:inline-block;position:relative;"
                onclick="OpenSeadragonClient.viewer.screenshotInstance.takeScreenshot()">
            <span class="oi oi-camera-slr"></span>
        </div>
    </div>
</div>

@code {
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedParameters { get; set; }
    [Parameter]
    public string[] TileSourcePaths { get; set; }
    [Parameter]
    public string[] AnnotationPaths { get; set; }
    [Parameter]
    public AnnotationHelper.OnAnnotationChanged OnAnnotationsChanged { get; set; }
    [Parameter]
    public AnnotationHelper.OnPageChanged OnPageChanged { get; set; }

    public OpenSeadragonClient OpenSeadragonClient { get { return OSDClient; } }

    private ElementReference ViewerReference { get; set; }

    public async Task UpdateAsync()
    {
        if (await OSDClient.GetIfViewerExists())
        {
            await OSDClient.DestroyAsync();
        }

        AuthenticationState authState = await AuthStateProvider.GetAuthenticationStateAsync();
        await OSDClient.InitAsync(ViewerReference, TileSourcePaths, AnnotationPaths, !authState.User.Identity.IsAuthenticated);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            OSDClient.AnnotationsChanged += OnAnnotationsChanged;
            OSDClient.PageChanged += OnPageChanged;

            await UpdateAsync();
        }
    }
}
