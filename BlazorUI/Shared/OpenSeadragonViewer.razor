
@inject IJSRuntime JSRuntime

@using Models

<div @ref="ViewerReference" @attributes="UnmatchedParameters"></div>

@code {
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedParameters { get; set; }
    [Parameter]
    public string[] TileSourcePaths { get; set; }

    private ElementReference ViewerReference { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            //string jsonStr = 
            //@"
            //{ 
            //    ""@context"": ""http://www.w3.org/ns/anno.jsonld"",
            //    ""id"": ""#a88b22d0-6106-4872-9435-c78b5e89fede"",
            //    ""type"": ""Annotation"",
            //    ""body"": [{
            //        ""type"": ""TextualBody"",
            //        ""value"": ""It's Hallstatt in Upper Austria""
            //    }],
            //    ""target"": {
            //        ""selector"": {
            //            ""type"": ""FragmentSelector"",
            //            ""conformsTo"": ""http://www.w3.org/TR/media-frags/"",
            //            ""value"": ""xywh=pixel:270,120,90,170""
            //        }
            //    }
            //}
            //";

            W3CWebAnnotationModel[][] annotations = new W3CWebAnnotationModel[][]
            {
                new W3CWebAnnotationModel[]
                {
                    new W3CWebAnnotationModel("Hello", 50, 50, 100, 100)
                },
                new W3CWebAnnotationModel[]
                {

                }
            };

            await JSRuntime.InvokeVoidAsync("OpenSeadragonClient.initDZI", ViewerReference, TileSourcePaths, annotations);
        }
    }
}
