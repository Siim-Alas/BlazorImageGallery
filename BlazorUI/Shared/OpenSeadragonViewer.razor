
@using BlazorUI.Services
@using BlazorUI.Services.JSInteropHelpers
@using HttpRequestModelsClassLibrary

@inject IJSRuntime JSRuntime
@inject OpenSeadragonClient OSDClient
@inject AuthenticationStateProvider AuthStateProvider

<div @attributes="UnmatchedParameters">
    <div @ref="ViewerReference" class="covers-entire-parent"></div>
</div>

@code {
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedParameters { get; set; }
    [Parameter]
    public string[] TileSourcePaths { get; set; }
    [Parameter]
    public string[] AnnotationPaths { get; set; }
    [Parameter]
    public AnnotationHelper.OnAnnotationChanged OnAnnotationsChanged { get; set; }
    [Parameter]
    public AnnotationHelper.OnPageChanged OnPageChanged { get; set; }

    public OpenSeadragonClient OpenSeadragonClient { get { return OSDClient; } }

    private ElementReference ViewerReference { get; set; }

    public async Task UpdateAsync()
    {
        if (await OSDClient.GetIfViewerExists())
        {
            await OSDClient.DestroyAsync();
        }

        AuthenticationState authState = await AuthStateProvider.GetAuthenticationStateAsync();
        await OSDClient.InitAsync(ViewerReference, TileSourcePaths, AnnotationPaths, !authState.User.Identity.IsAuthenticated);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            OSDClient.AnnotationsChanged += OnAnnotationsChanged;
            OSDClient.PageChanged += OnPageChanged;

            await UpdateAsync();
        }
    }
}
