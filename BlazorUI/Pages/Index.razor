@page "/"

@using BlazorUI.Services.APIClients
@using HttpRequestModelsClassLibrary
@using Microsoft.AspNetCore.WebUtilities

@inject AnonymousDZIClient AnonymousClient
@inject AdminDZIClient AdminClient
@inject NavigationManager NavManager

@if (HasInitialized)
{
    <div class="full-page-container">
        @if (ShowPopup)
        {
            <div class="centered p-4">@PopupText</div>
        }
        <!--
    <div class="osd-navbar bg-light p-4 rounded">
        <div class="dropdown">
            <button type="button" class="dropbtn override-button-default">
                <span class="oi oi-pin"></span>
            </button>
            <div class="dropdown-content">
                @if (AnnotationsOnCurrentPage != null)
                {
                    @foreach (var ann in AnnotationsOnCurrentPage)
                    {
                        <a class="pointer-cursor" @onclick="@(async() => { await Viewer.OpenSeadragonClient.PanTo(ann.Id); })">
                            @((ann.Body[0].Value.Length > 50) ? ann.Body[0].Value.Substring(0, 50) : ann.Body[0].Value)
                        </a>
                    }
                }
            </div>
        </div>
        <div id="zoomin" title="Zoom in">
            <span class="oi oi-zoom-in"></span>
        </div>
        <div id="zoomout" title="Zoom out">
            <span class="oi oi-zoom-out"></span>
        </div>
        <div id="gohome" title="Go home">
            <span class="oi oi-home"></span>
        </div>
        <div id="togglefullpage" title="Toggle full page">
            <span class="oi oi-fullscreen-enter"></span>
        </div>
        <div id="rotateleft" title="Rotate left">
            <span class="oi oi-action-undo"></span>
        </div>
        <div id="rotateright" title="Rotate right">
            <span class="oi oi-action-redo"></span>
        </div>
        <div id="previous" title="Previous">
            <span class="oi oi-arrow-left"></span>
        </div>
        <div id="next" title="Next">
            <span class="oi oi-arrow-right"></span>
        </div>
    </div>
    -->
        <OpenSeadragonViewer @ref="Viewer"
                             TileSourcePaths="TileSourcePaths"
                             AnnotationPaths="AnnotationPaths"
                             OnAnnotationsChanged="OnAnnotationsChanged"
                             OnPageChanged="@(async(int page) => { Page = page; })"
                             class="covers-entire-parent" />
        <div class="dropdown-fixed-bottom-left">
            <button type="button" class="dropbtn override-button-default">
                <span class="oi oi-pin"></span>
            </button>
            <button type="button" class="dropbtn override-button-default" @onclick="UploadAnnotationsOnPage">
                <span class="oi oi-cloud-upload"></span>
            </button>
            <div class="dropdown-content">
                @if (AnnotationsOnCurrentPage != null)
                {
                    @foreach (var ann in AnnotationsOnCurrentPage)
                    {
                        <a class="pointer-cursor" @onclick="@(async() => { await Viewer.OpenSeadragonClient.PanTo(ann.id); })">
                            @((ann.body[0].value.Length > 50) ? ann.body[0].value.Substring(0, 50) : ann.body[0].value)
                        </a>
                    }
                }
            </div>
        </div>
        <button type="button" class="dropbtn override-button-default fixed-bottom-right">
            <span class="oi oi-wrench" @onclick="@(() => { NavManager.NavigateTo("/admin"); })"></span>
        </button>
    </div>
}
else
{
    <div class="loading-screen">
        <div class="centered text-white text-center">
            <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <p class="mt-4">
                Downloading images.
            </p>
        </div>
    </div>
}

@code {
    private string Category { get; set; }
    private int Page { get; set; } = 0;

    private string[] TileSourcePaths { get; set; }
    private string[] AnnotationPaths { get; set; }
    private bool HasInitialized { get; set; } = false;

    private bool ShowPopup { get; set; } = false;
    private string PopupText { get; set; } = "";

    private OpenSeadragonViewer Viewer { get; set; }

    private W3CWebAnnotationModel[] AnnotationsOnCurrentPage { get; set; }

    private async Task OnAnnotationsChanged(W3CWebAnnotationModel[] annotations)
    {
        AnnotationsOnCurrentPage = annotations;
        this.StateHasChanged();
    }

    private async Task UploadAnnotationsOnPage()
    {
        int i = TileSourcePaths[Page].LastIndexOf('/');
        await AdminClient.PostAnnotations(
            Category, TileSourcePaths[Page].Substring(i + 1, TileSourcePaths[Page].Length - i - 5), AnnotationsOnCurrentPage);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Uri uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("category", out var category))
        {
            Category = category;
        }
        else
        {
            Category = "test category";
        }

        string[] DirectoryURIs = await AnonymousClient.GetDZIDirectoryURIsAsync(Category);

        TileSourcePaths = new string[DirectoryURIs.Length];
        AnnotationPaths = new string[DirectoryURIs.Length];
        for (int i = 0; i < DirectoryURIs.Length; i++)
        {
            TileSourcePaths[i] = AnonymousClient.GetTileSourceURIFromDirectoryURI(DirectoryURIs[i]);
            AnnotationPaths[i] = AnonymousClient.GetAnnotationsURIFromDirectoryURI(DirectoryURIs[i]);
        }

        HasInitialized = true;
    }
}