@page "/"

@using BlazorUI.Services.APIClients
@using Microsoft.AspNetCore.WebUtilities

@inject AnonymousDZIClient AnonymousClient
@inject NavigationManager NavManager

@if ((TileSourcePaths != null) && (TileSourcePaths.Length > 0))
{
    <div class="full-page-container">
        <OpenSeadragonViewer TileSourcePaths="@TileSourcePaths" style="width:100%;height:100%;margin:auto;" />
    </div>
}

@if (!HasInitialized)
{
    <div class="loading-screen">
        <div class="centered text-white text-center">
            <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <p class="mt-4">
                Downloading images.
            </p>
        </div>
    </div>
}

@code {
    private string[] TileSourcePaths { get; set; }
    private bool HasInitialized { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Uri uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (!QueryHelpers.ParseQuery(uri.Query).TryGetValue("category", out var category))
        {
            category = "test category";
        }

        string[] DirectoryURIs = await AnonymousClient.GetDZIDirectoryURIsAsync(category);

        TileSourcePaths = new string[DirectoryURIs.Length];
        for (int i = 0; i < DirectoryURIs.Length; i++)
        {
            TileSourcePaths[i] = AnonymousClient.GetTileSourceURIFromDirectoryURI(DirectoryURIs[i]);
        }

        HasInitialized = true;
    }
}